
// This is an autogenerated file from Firebase Studio.
'use server';
/**
 * @fileOverview LinkedIn post generation flow.
 *
 * This file defines a Genkit flow for generating insightful LinkedIn posts based on selected themes,
 * with optional insights on trending topics.
 *
 * @param input - The input for the generateLinkedInPost flow.
 * @returns The generated LinkedIn post.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const LinkedInPostTheme = z.enum([
  'Milestone',
  'Advice',
  'Behind-the-Scenes',
  'Personal Growth',
]);

const GenerateLinkedInPostInputSchema = z.object({
  theme: LinkedInPostTheme.describe('The theme of the LinkedIn post.'),
  topic: z.string().describe('The specific topic for the LinkedIn post.'),
  includeTrendingInsight: z
    .boolean()
    .describe(
      'Whether to include insights on why the chosen topic is trending.'
    ),
});
export type GenerateLinkedInPostInput =
  z.infer<typeof GenerateLinkedInPostInputSchema>;

const GenerateLinkedInPostOutputSchema = z.object({
  post: z.string().describe('The generated LinkedIn post content.'),
  trendingInsight: z
    .string()
    .optional()
    .describe('Insights on why the chosen topic is trending, if requested.'),
});
export type GenerateLinkedInPostOutput =
  z.infer<typeof GenerateLinkedInPostOutputSchema>;

export async function generateLinkedInPost(
  input: GenerateLinkedInPostInput
): Promise<GenerateLinkedInPostOutput> {
  return generateLinkedInPostFlow(input);
}

const generateLinkedInPostPrompt = ai.definePrompt({
  name: 'generateLinkedInPostPrompt',
  input: {schema: GenerateLinkedInPostInputSchema},
  output: {schema: GenerateLinkedInPostOutputSchema},
  prompt: `You are a LinkedIn expert. Generate an insightful and authentic LinkedIn post based on the following theme and topic:

Theme: {{{theme}}}
Topic: {{{topic}}}

{{#if includeTrendingInsight}}
Also, provide insights on why this topic is currently trending on LinkedIn.
{{/if}}`,
});

const generateLinkedInPostFlow = ai.defineFlow(
  {
    name: 'generateLinkedInPostFlow',
    inputSchema: GenerateLinkedInPostInputSchema,
    outputSchema: GenerateLinkedInPostOutputSchema,
  },
  async (input): Promise<GenerateLinkedInPostOutput> => {
    try {
      const {output} = await generateLinkedInPostPrompt(input);
      return output!;
    } catch (e: any) {
      if (e instanceof Error && (e.message.includes('[503 Service Unavailable]') || e.message.includes('The model is overloaded'))) {
        throw new Error("The AI service is currently experiencing high demand and is temporarily unavailable. Please try again in a few moments.");
      }
      throw e;
    }
  }
);
